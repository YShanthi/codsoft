import java.util.Scanner;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.HashSet;

public class AdvancedWordCounter {
    public static void main(String[] args) {
        // Prompt the user to enter text or provide a file
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter 'text' to input text or 'file' to provide a file: ");
        String choice = scanner.nextLine().toLowerCase();

        // Read input based on user's choice
        String inputText = "";
        if (choice.equals("text")) {
            System.out.print("Enter a sentence or paragraph: ");
            inputText = scanner.nextLine();
        } else if (choice.equals("file")) {
            System.out.print("Enter the path to the file: ");
            String filePath = scanner.nextLine();
            inputText = readFromFile(filePath);
        } else {
            System.out.println("Invalid choice. Exiting.");
            System.exit(1);
        }

        // Call the wordCount function and display the result
        int count = wordCount(inputText);
        System.out.println("Word count: " + count);

        // Additional features
        displayUniqueWords(inputText);
        // You can add more features based on the suggestions

        // Close the scanner
        scanner.close();
    }

    // Function to count words in a string
    private static int wordCount(String input) {
        // Remove leading and trailing whitespaces
        input = input.trim();

        // Check for empty input
        if (input.isEmpty()) {
            return 0;
        }

        // Split the input string by spaces or punctuation
        String[] words = input.split("\\s+|\\p{Punct}+");

        // Return the number of words
        return words.length;
    }

    // Function to read text from a file
    private static String readFromFile(String filePath) {
        StringBuilder content = new StringBuilder();
        try {
            Scanner fileScanner = new Scanner(new File(filePath));
            while (fileScanner.hasNextLine()) {
                content.append(fileScanner.nextLine()).append("\n");
            }
            fileScanner.close();
        } catch (FileNotFoundException e) {
            System.out.println("File not found. Exiting.");
            System.exit(1);
        }
        return content.toString();
    }

    // Function to display unique words
    private static void displayUniqueWords(String input) {
        // Split the input string by spaces or punctuation
        String[] words = input.split("\\s+|\\p{Punct}+");

        // Create a HashSet to store unique words
        HashSet<String> uniqueWords = new HashSet<>();

        // Add words to the HashSet
        for (String word : words) {
            if (!word.isEmpty()) {
                uniqueWords.add(word.toLowerCase()); // Convert to lowercase to ignore case
            }
        }

        // Display unique words
        System.out.println("Unique words:");
        for (String uniqueWord : uniqueWords) {
            System.out.println(uniqueWord);
        }
    }
}
